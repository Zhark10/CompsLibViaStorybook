{"version":3,"sources":["../src/ButtonComponent.tsx"],"names":["ButtonComponent","React","Component","pressEventHandler","onPress","props","render","type","color","text","styles","marginBottom","marginTop","disabled","shadow","children","backgroundColor","buttonColor","shadowStyles","ButtonComponentStyles","toUpperCase"],"mappings":";;;;;;;AAAA;;;;;;AAEA;;AACA;;;;;;;;AAgBA,MAAMA,eAAN,SAA8BC,KAAK,CAACC,SAApC,CAAqD;AAEnDC,EAAAA,iBAAiB,GAAG,MAAM;AACxB,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACAD,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD,GAHgB;;AAKjBE,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AACEC,MAAAA,KADF;AACSC,MAAAA,IADT;AACeC,MAAAA,MADf;AACuBC,MAAAA,YADvB;AACqCC,MAAAA,SADrC;AAEJC,MAAAA,QAFI;AAEMC,MAAAA,MAFN;AAEcC,MAAAA,QAFd;AAEwBC,MAAAA;AAFxB,QAGF,KAAKX,KAHT;AAIA,UAAMY,WAAW,GAAGJ,QAAQ,GAAG;AAACG,MAAAA,eAAe,EAAE,SAAlB;AAA6BR,MAAAA,KAAK,EAAE;AAApC,KAAH,GAAoD;AAACQ,MAAAA,eAAD;AAAkBR,MAAAA;AAAlB,KAAhF;AACA,UAAMU,YAAY,GAAGJ,MAAM,IAAIK,6CAAsB,QAAtB,CAA/B;AACA,WACE,oBAAC,yBAAD;AACE,MAAA,aAAa,EAAEN,QAAQ,GAAG,CAAH,GAAO,GADhC;AAEE,MAAA,OAAO,EAAE,KAAKV,iBAFhB;AAGE,MAAA,QAAQ,EAAEU,QAHZ;AAIE,MAAA,KAAK,EAAE,CACL;AAACG,QAAAA,eAAe,EAAEC,WAAW,CAACD;AAA9B,OADK,EAEL;AAACJ,QAAAA,SAAS,EAAEA,SAAS,GAAG,CAAH,GAAO;AAA5B,OAFK,EAGL;AAACD,QAAAA,YAAY,EAAEA,YAAY,GAAG,CAAH,GAAO;AAAlC,OAHK,EAILD,MAJK,EAKLS,6CAAsBZ,IAAtB,CALK,EAMLW,YANK;AAJT,OAYE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAE;AAACV,QAAAA,KAAK,EAAES,WAAW,CAACT,KAApB;AAA2B,WAAGE;AAA9B;AADT,OAGGD,IAAI,CAACW,WAAL,EAHH,CAZF,EAiBE,oBAAC,mBAAD,OAjBF,CADF;AAqBD;;AAnCkD;;eAsCtCpB,e","sourcesContent":["import * as React from 'react';\nimport {TouchableOpacity, Text, Image} from 'react-native';\nimport {ButtonComponentStyles} from './ButtonComponentStyles';\nimport {Spinner} from 'native-base';\n\ninterface Props {\n  type: 'default' | 'action' | 'icon' | 'round' | 'regular' | 'transparent' | 'lightning' | 'short';\n  backgroundColor: string;\n  color: string;\n  onPress?: () => void;\n  text: string;\n  styles?: any;\n  disabled?: boolean;\n  iconOpacity?: any;\n  shadow?: boolean;\n  marginTop?: boolean;\n  marginBottom?: boolean;\n}\n\nclass ButtonComponent extends React.Component<Props> {\n\n  pressEventHandler = () => {\n    const {onPress} = this.props;\n    onPress && onPress();\n  };\n\n  render() {\n    const {\n      type, color, text, styles, marginBottom, marginTop,\n      disabled, shadow, children, backgroundColor\n    } = this.props;\n    const buttonColor = disabled ? {backgroundColor: '#cccccc', color: '#666666'} : {backgroundColor, color};\n    const shadowStyles = shadow && ButtonComponentStyles['shadow'];\n    return (\n      <TouchableOpacity\n        activeOpacity={disabled ? 1 : 0.7}\n        onPress={this.pressEventHandler}\n        disabled={disabled}\n        style={[\n          {backgroundColor: buttonColor.backgroundColor},\n          {marginTop: marginTop ? 4 : 0}, \n          {marginBottom: marginBottom ? 4 : 0}, \n          styles, \n          ButtonComponentStyles[type], \n          shadowStyles]}\n      >\n        <Text\n          style={{color: buttonColor.color, ...styles}}\n        >\n          {text.toUpperCase()}\n        </Text>\n        <Spinner/>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default ButtonComponent;\n"],"file":"ButtonComponent.js"}